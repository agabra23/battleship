(()=>{"use strict";const t=function(t){let e=0;const r=()=>{let e=0;return t.forEach((t=>{e++})),e};return{getLength:r,isSunk:()=>e>=r(),hit:()=>{e++},getHits:()=>e,getPath:()=>t,resetHits:()=>{e=0},hits:e}},e=e=>{const r=[],n=function(e){const r=[...Array(10)].map((t=>Array(10).fill("none"))),n=[],o=[];let s=[];const a=t=>{t.getPath().forEach((e=>{const[n,o]=e;r[n][o]=t})),c(t)},c=t=>{s.push(t)};return{placeShip:a,boardArray:r,receiveAttack:t=>{const[e,s]=t;let a,c=!1;a=n.some((e=>{const[r,n]=e;return r===t[0]&&n===t[1]})),c=o.some((e=>{const[r,n]=e;return r===t[0]&&n===t[1]})),"none"!==r[e][s]&&!1===a?(r[e][s].hit(),n.push(t)):"none"===r[e][s]&&!1===c&&o.push(t)},hits:n,misses:o,addShip:c,resetGameboard:()=>{n=[],o=[],s=[]},initBoard:()=>{a(t([[1,4],[1,5]])),a(t([[6,4],[6,5],[6,6]])),a(t([[4,2],[5,2],[6,2],[7,2]])),a(t([[8,3],[8,4],[8,5],[8,6],[8,7]])),a(t([[2,3],[2,4],[2,5],[2,6],[2,7]]))},isShip:t=>{const[e,n]=t;return"none"!==r[e][n]},getShip:t=>{const[e,n]=t;return r[e][n]},ships:s,type:e}}(e),o=t=>{r.push(t)};return"computer"===e?{attempt:o,generateMove:()=>{const t=t=>Math.floor(Math.random()*t),e=t=>r.some((e=>{const[r,n]=e;return r===t[0]&&n===t[1]}));let n=[t(9),t(9)];for(;e(n);)n=[t(9),t(9)];return n},board:n,type:e}:{attempt:o,board:n,type:e}},r=(()=>{const t=(t,e)=>{const[r,n]=t,o=document.getElementById(`${e.type} - ${r},${n}`),s=e.isShip(t);o.innerHTML=s?"Hit":"Miss"};return{renderBoard:e=>{const r=document.getElementById("board");r.innerHTML='<div id="overlay"></div>';const n=document.createElement("h3");console.log(e),n.innerHTML=`${e.type}'s Turn`,r.appendChild(n),e.boardArray.forEach(((t,n)=>{const s=document.createElement("div");s.classList.add("rowDiv"),t.forEach(((t,r)=>{const a=document.createElement("div");a.classList.add("boardCell"),a.id=`${e.type} - ${n},${r}`,a.dataset.board=e.type,a.dataset.x=n,a.dataset.y=r,"none"!==t&&a.classList.add("shipCell"),a.addEventListener("click",(t=>{t.stopPropagation(),""===a.textContent&&o.moveEvent(a)})),s.appendChild(a)})),r.appendChild(s)})),e.misses.forEach((r=>{t(r,e)})),e.hits.forEach((r=>{t(r,e)}))},attempt:t,stopClicks:()=>{document.getElementById("overlay").style.pointerEvents="all"},startClicks:()=>{document.getElementById("overlay").style.pointerEvents="none"}}})(),n=(()=>{const t=e("Computer"),o=e("User");let s=t;const a=t=>{t.board.ships.every((t=>t.isSunk()))&&alert("win")};return{initGame:()=>{const e=o.board;t.board.initBoard(),e.initBoard()},switchTurn:()=>{console.log("start switch",n.currentPlayer.type),n.currentPlayer===o?n.currentPlayer=t:n.currentPlayer=o,console.log("end switch",n.currentPlayer.type)},computerPlayer:t,userPlayer:o,currentPlayer:s,checkLoss:a,moveEvent:e=>{r.stopClicks();const c="Computer"===e.dataset.board?t.board:o.board;c.receiveAttack([e.dataset.x,e.dataset.y]),r.attempt([e.dataset.x,e.dataset.y],c),a(s),n.switchTurn()}}})(),o=n;o.initGame();const s=document.getElementById("switchTurnBtn");r.renderBoard(o.currentPlayer.board),s.onclick=()=>{r.startClicks(),r.renderBoard(o.currentPlayer.board)}})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,