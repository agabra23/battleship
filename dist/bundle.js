(()=>{"use strict";const e=function(e){let t=0;const r=()=>{let t=0;return e.forEach((e=>{t++})),t};return{getLength:r,isSunk:()=>t>=r(),hit:()=>{t++},getHits:()=>t,getPath:()=>e,resetHits:()=>{t=0},hits:t}},t=function(t){const r=[...Array(10)].map((e=>Array(10).fill("none"))),n=[],o=[];let s=[];const a=e=>{e.getPath().forEach((t=>{const[n,o]=t;r[n][o]=e})),c(e)},c=e=>{s.push(e)};return{placeShip:a,boardArray:r,receiveAttack:e=>{const[t,s]=e;let a,c=!1;a=n.some((t=>{const[r,n]=t;return r===e[0]&&n===e[1]})),c=o.some((t=>{const[r,n]=t;return r===e[0]&&n===e[1]})),"none"!==r[t][s]&&!1===a?(r[t][s].hit(),n.push(e)):"none"===r[t][s]&&!1===c&&o.push(e)},hits:n,misses:o,addShip:c,resetGameboard:()=>{n=[],o=[],s=[]},initBoard:()=>{a(e([[1,4],[1,5]])),a(e([[6,4],[6,5],[6,6]])),a(e([[4,2],[5,2],[6,2],[7,2]])),a(e([[8,3],[8,4],[8,5],[8,6],[8,7]])),a(e([[2,3],[2,4],[2,5],[2,6],[2,7]]))},isShip:e=>{const[t,n]=e;return"none"!==r[t][n]},getShip:e=>{const[t,n]=e;return r[t][n]},ships:s,type:t}},r=e=>{const r=[];return{attempt:e=>{r.push(e)},board:t(e),type:e,generateMove:()=>{const e=e=>Math.floor(Math.random()*e),t=e=>r.some((t=>{const[r,n]=t;return r===e[0]&&n===e[1]}));let n=[e(9),e(9)];for(;t(n);)n=[e(9),e(9)];return n}}},n=(()=>{const e=(e,t)=>{const[r,n]=e,o=document.getElementById(`${t.type} - ${r},${n}`),s=t.isShip(e);o.innerHTML=s?"Hit":"Miss"};return{renderBoard:t=>{const r=document.getElementById("board");r.innerHTML='<div id="overlay"></div>';const n=document.createElement("h3");console.log(t),n.innerHTML=`${t.type}'s Turn`,r.appendChild(n),t.boardArray.forEach(((e,n)=>{const o=document.createElement("div");o.classList.add("rowDiv"),e.forEach(((e,r)=>{const s=document.createElement("div");s.classList.add("boardCell"),s.id=`${t.type} - ${n},${r}`,s.dataset.board=t.type,s.dataset.x=n,s.dataset.y=r,"none"!==e&&(s.classList.add("shipCell"),e.isSunk()&&(s.style.backgroundColor="red")),s.addEventListener("click",(e=>{e.stopPropagation(),""===s.textContent&&a.moveEvent(s)})),o.appendChild(s)})),r.appendChild(o)})),t.misses.forEach((r=>{e(r,t)})),t.hits.forEach((r=>{e(r,t)}))},attempt:e,stopClicks:()=>{document.getElementById("overlay").style.pointerEvents="all"},startClicks:()=>{document.getElementById("overlay").style.pointerEvents="none"},styleSunk:e=>{document.querySelectorAll(".rowDiv").forEach((t=>{document.querySelectorAll(".boardCell").forEach((t=>{const[r,n]=[t.dataset.x,t.dataset.y];"User"===e?a.userPlayer.board.isShip([r,n])&&a.userPlayer.board.getShip([r,n]).isSunk()&&(t.style.backgroundColor="red"):a.computerPlayer.board.isShip([r,n])&&a.computerPlayer.board.getShip([r,n]).isSunk()&&(t.style.backgroundColor="red")}))}))},renderStart:()=>{const e=document.getElementById("startScreen");e.style.display="flex";const t=document.createElement("button");t.id="startBtn",t.textContent="Start Game",e.appendChild(t),document.getElementById("board").style.display="none",document.getElementById("switchTurnBtn").style.display="none",t.onclick=()=>{e.style.display="",document.getElementById("board").style.display="",document.getElementById("switchTurnBtn").style.display="",t.style.display="none"}},toggleTurnBtn:()=>{const e=document.getElementById("switchTurnBtn");e.disabled=!e.disabled}}})(),o=n,s=(()=>{const e=r("Computer"),t=r("User");let n=t;const a=e=>{e.board.ships.every((e=>e.isSunk()))&&alert("win")};return{initGame:()=>{const r=t.board;e.board.initBoard(),r.initBoard()},switchTurn:()=>{console.log("start switch",s.currentPlayer.type),s.currentPlayer===t?s.currentPlayer=e:s.currentPlayer=t,console.log("end switch",s.currentPlayer.type)},computerPlayer:e,userPlayer:t,currentPlayer:n,checkLoss:a,moveEvent:r=>{o.stopClicks();const c="Computer"===r.dataset.board?e.board:t.board;c.receiveAttack([r.dataset.x,r.dataset.y]),o.attempt([r.dataset.x,r.dataset.y],c),o.styleSunk(c.type),a(n),s.switchTurn(),o.toggleTurnBtn()},computerMoveEvent:async()=>{o.stopClicks(),await(750,new Promise((e=>{setTimeout(e,750)}))),console.log("after 1 sec");const e=s.computerPlayer.generateMove(),t=s.computerPlayer.board;t.receiveAttack(e),o.attempt(e,t),o.styleSunk(t.type),s.checkLoss(s.currentPlayer),s.switchTurn(),o.toggleTurnBtn()}}})(),a=s;a.initGame();const c=document.getElementById("switchTurnBtn");o.renderBoard(a.currentPlayer.board),o.renderStart(),c.onclick=()=>{o.toggleTurnBtn(),o.renderBoard(a.currentPlayer.board),a.currentPlayer===a.computerPlayer?a.computerMoveEvent():o.startClicks()}})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,