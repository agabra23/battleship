(()=>{"use strict";const e=function(e){let t=0;const r=()=>{let t=0;return e.forEach((e=>{t++})),t};return{getLength:r,isSunk:()=>t>=r(),hit:()=>{t++},getHits:()=>t,getPath:()=>e,resetHits:()=>{t=0},hits:t}},t=t=>{const r=[],n=function(t){const r=[...Array(10)].map((e=>Array(10).fill("none"))),n=[],o=[];let s=[];const a=e=>{e.getPath().forEach((t=>{const[n,o]=t;r[n][o]=e})),c(e)},c=e=>{s.push(e)};return{placeShip:a,boardArray:r,receiveAttack:e=>{const[t,s]=e;let a,c=!1;a=n.some((t=>{const[r,n]=t;return r===e[0]&&n===e[1]})),c=o.some((t=>{const[r,n]=t;return r===e[0]&&n===e[1]})),"none"!==r[t][s]&&!1===a?(r[t][s].hit(),n.push(e)):"none"===r[t][s]&&!1===c&&o.push(e)},hits:n,misses:o,addShip:c,resetGameboard:()=>{n=[],o=[],s=[]},initBoard:()=>{a(e([[1,4],[1,5]])),a(e([[6,4],[6,5],[6,6]])),a(e([[4,2],[5,2],[6,2],[7,2]])),a(e([[8,3],[8,4],[8,5],[8,6],[8,7]])),a(e([[2,3],[2,4],[2,5],[2,6],[2,7]]))},isShip:e=>{const[t,n]=e;return"none"!==r[t][n]},getShip:e=>{const[t,n]=e;return r[t][n]},ships:s,type:t}}(t),o=e=>{r.push(e)};return"computer"===t?{attempt:o,generateMove:()=>{const e=e=>Math.floor(Math.random()*e),t=e=>r.some((t=>{const[r,n]=t;return r===e[0]&&n===e[1]}));let n=[e(9),e(9)];for(;t(n);)n=[e(9),e(9)];return n},board:n,type:t}:{attempt:o,board:n,type:t}},r=(()=>{const e=(e,t)=>{const[r,n]=e,o=document.getElementById(`${t.type} - ${r},${n}`),s=t.isShip(e);o.innerHTML=s?"Hit":"Miss"};return{renderBoard:t=>{const r=document.getElementById("board");r.style.display="flex",r.innerHTML='<div id="overlay"></div>',document.getElementById("startScreen").style.display="none",document.getElementById("switchTurnBtn").style.display="block";const n=document.createElement("h3");console.log(t),n.innerHTML=`${t.type}'s Turn`,r.appendChild(n),t.boardArray.forEach(((e,n)=>{const s=document.createElement("div");s.classList.add("rowDiv"),e.forEach(((e,r)=>{const a=document.createElement("div");a.classList.add("boardCell"),a.id=`${t.type} - ${n},${r}`,a.dataset.board=t.type,a.dataset.x=n,a.dataset.y=r,"none"!==e&&(a.classList.add("shipCell"),e.isSunk()&&(a.style.backgroundColor="red")),a.addEventListener("click",(e=>{e.stopPropagation(),""===a.textContent&&o.moveEvent(a)})),s.appendChild(a)})),r.appendChild(s)})),t.misses.forEach((r=>{e(r,t)})),t.hits.forEach((r=>{e(r,t)}))},attempt:e,stopClicks:()=>{document.getElementById("overlay").style.pointerEvents="all"},startClicks:()=>{document.getElementById("overlay").style.pointerEvents="none"},styleSunk:e=>{document.querySelectorAll(".rowDiv").forEach((t=>{document.querySelectorAll(".boardCell").forEach((t=>{const[r,n]=[t.dataset.x,t.dataset.y];"User"===e?o.userPlayer.board.isShip([r,n])&&o.userPlayer.board.getShip([r,n]).isSunk()&&(t.style.backgroundColor="red"):o.computerPlayer.board.isShip([r,n])&&o.computerPlayer.board.getShip([r,n]).isSunk()&&(t.style.backgroundColor="red")}))}))}}})(),n=(()=>{const e=t("Player 1"),o=t("Player 2");let s=e;const a=e=>{e.board.ships.every((e=>e.isSunk()))&&alert("win")};return{initGame:()=>{const t=o.board;e.board.initBoard(),t.initBoard()},switchTurn:()=>{console.log("start switch",n.currentPlayer.type),n.currentPlayer===o?n.currentPlayer=e:n.currentPlayer=o,console.log("end switch",n.currentPlayer.type)},playerOne:e,playerTwo:o,currentPlayer:s,checkLoss:a,moveEvent:t=>{r.stopClicks();const c="Computer"===t.dataset.board?e.board:o.board;c.receiveAttack([t.dataset.x,t.dataset.y]),r.attempt([t.dataset.x,t.dataset.y],c),r.styleSunk(c.type),a(s),n.switchTurn()}}})(),o=n;o.initGame();const s=document.getElementById("switchTurnBtn");r.renderBoard(o.currentPlayer.board),s.onclick=()=>{r.startClicks(),r.renderBoard(o.currentPlayer.board)}})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,